version: '1'

services:
  
  messageBrokerMessaging:
    image: rabbitmq:3-management-alpine
    hostname: messageBrokerMessaging
    ports:
      - 6000:5672
      - 6001:15672
    environment:
      - "RABBITMQ_DEFAULT_USER=root"
      - "RABBITMQ_DEFAULT_PASS=password"
    volumes:
      - messageBroker:/var/lib/rabbitmq/
    networks:
      - localNetwork
  
  mssqlAuth:
    image: mcr.microsoft.com/mssql/server
    ports:
      - 27018:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "_Aa12345678"
    volumes:
      - dbauth:/var/opt/mssql
    networks:
      - localNetwork

  mssqlServers:
    image: mcr.microsoft.com/mssql/server
    ports:
      - 27019:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "_Aa12345678"
    volumes:
      - dbservers:/var/opt/mssql
    networks:
      - localNetwork

  mongoChannels:
    image: mongo
    ports:
      - '27020:27017'
    volumes:
      - dbchannels:/data/db
    networks:
      - localNetwork

  mongoMessages:
    image: mongo
    ports:
      - '27021:27017'
    volumes:
      - dbmessages:/data/db
    networks:
      - localNetwork

  netreact-signaling:
    image: netreact-signaling
    build:
      context: .
      dockerfile: ./NetReact.Signaling/Dockerfile
    ports:
      - '7153:8080'
    environment:
      - MessageBrokerConnection__HostName=messageBrokerMessaging
      - MessageBrokerConnection__Port=5672
      - MessageBrokerConnection__UserName=root
      - MessageBrokerConnection__Password=password
    networks:
      - localNetwork

  netReact-Auth:
    image: netreact-authservice
    build:
      context: .
      dockerfile: ./NetReact.AuthService/Dockerfile
    environment:
      - "Connections__Database=Server=mssqlAuth,1433;Database=db;User=sa;Password=_Aa12345678;TrustServerCertificate=True"
    ports:
      - '7154:8080'
    depends_on:
      - mssqlAuth
    networks:
      - localNetwork

  netReact-ServerManagement:
    image: netreact-servermanagementservice
    build:
      context: .
      dockerfile: ./NetReact.ServerManagementService/Dockerfile
    environment:
      - "Connections__Database=Server=mssqlServers,1433;Database=db;User=sa;Password=_Aa12345678;TrustServerCertificate=True"
      - Connections__Redis=127.0.0.1:6379
    ports:
      - '7155:8080'
    depends_on:
      - mssqlServers
    networks:
      - localNetwork

  netReact-ChannelManagement:
    image: netreact-channelmanagementservice
    build:
      context: .
      dockerfile: ./NetReact.ChannelManagementService/Dockerfile
    ports:
      - '7156:8080'
    environment:
      - Connections__ServersService=http://netReact-ServerManagement:8080
      - Connections__Database=mongodb://mongoChannels:27017/
    depends_on:
      - mongoChannels
    networks:
      - localNetwork

  netReact-Messaging:
    image: netreact-messagingservice
    build:
      context: .
      dockerfile: ./NetReact.MessagingService/Dockerfile
    ports:
      - '7157:8080'
    environment:
      - Connections__ChannelsService=http://netReact-ChannelManagement:8080
      - Connections__Database=mongodb://mongoMessages:27017/
      - MessageBrokerConnection__HostName=messageBrokerMessaging
      - MessageBrokerConnection__Port=5672
      - MessageBrokerConnection__UserName=root
      - MessageBrokerConnection__Password=password
      - ASPNETCORE_DBIMAGES=DBIMAGES
    depends_on:
      - mongoMessages
      - netReact-ChannelManagement
      - messageBrokerMessaging
    networks:
      - localNetwork

  netReact-MessagingWorker:
    image: netreact-messagingworker
    restart: always
    build:
      context: .
      dockerfile: ./NetReact.MessagingWorker/Dockerfile
    environment:
      - Connections__Database=mongodb://mongoMessages:27017/
      - MessageBrokerConnection__HostName=messageBrokerMessaging
      - MessageBrokerConnection__Port=5672
      - MessageBrokerConnection__UserName=root
      - MessageBrokerConnection__Password=password
    depends_on:
      - messageBrokerMessaging
    networks:
      - localNetwork

volumes:
  messageBroker:
  dbauth:
  dbservers:
  dbchannels:
  dbmessages:

networks:
  localNetwork:
    external:
      name: network